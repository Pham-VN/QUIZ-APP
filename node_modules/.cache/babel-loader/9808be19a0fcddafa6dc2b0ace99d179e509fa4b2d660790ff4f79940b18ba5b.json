{"ast":null,"code":"var _jsxFileName = \"/home/clement/Desktop/Quiz_React/quiz-app/src/components/displayQuestionPhraseAndAnswers.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport dataPartieDuDiscours from '../dataPartiesDeDiscours.js';\nimport DataQuestionPhrase from './QuestionAndPhrase.js';\nimport InputRadio from './InputRadio.js';\nimport Button from './Button.js';\nimport ChangeQuestion from '../hooks/useInCrement.js';\nimport Answers from './Answers.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayQuiz() {\n  const {\n    currentQuestion,\n    increment,\n    decrement\n  } = ChangeQuestion({\n    initialValue: 0,\n    maxValue: dataPartieDuDiscours.length,\n    minValue: 0\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(DataQuestionPhrase, {\n      question: dataPartieDuDiscours[currentQuestion].question,\n      phrase: dataPartieDuDiscours[currentQuestion].phrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), dataPartieDuDiscours[currentQuestion].reponses.map((reponse, index) => /*#__PURE__*/_jsxDEV(Answers, {\n      reponse: reponse.texte,\n      children: reponse.texte\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      onClick: increment,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      onClick: decrement,\n      children: \"Pr\\xE9cedent Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = DisplayQuiz;\nexport default DisplayQuiz;\nvar _c;\n$RefreshReg$(_c, \"DisplayQuiz\");","map":{"version":3,"names":["dataPartieDuDiscours","DataQuestionPhrase","InputRadio","Button","ChangeQuestion","Answers","jsxDEV","_jsxDEV","DisplayQuiz","currentQuestion","increment","decrement","initialValue","maxValue","length","minValue","className","children","question","phrase","fileName","_jsxFileName","lineNumber","columnNumber","reponses","map","reponse","index","texte","type","onClick","_c","$RefreshReg$"],"sources":["/home/clement/Desktop/Quiz_React/quiz-app/src/components/displayQuestionPhraseAndAnswers.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport dataPartieDuDiscours from '../dataPartiesDeDiscours.js';\nimport DataQuestionPhrase from './QuestionAndPhrase.js';\nimport InputRadio from './InputRadio.js';\nimport Button from './Button.js';\nimport ChangeQuestion from '../hooks/useInCrement.js'\nimport Answers from './Answers.js';\n\nfunction DisplayQuiz() {\n\n  const {currentQuestion,increment,decrement} = ChangeQuestion({\n    \n    initialValue : 0,\n    maxValue:dataPartieDuDiscours.length,\n    minValue: 0,\n\n})\n\n  return (\n        <div className='container'>\n\n        <DataQuestionPhrase \n            question={dataPartieDuDiscours[currentQuestion].question}\n            phrase={dataPartieDuDiscours[currentQuestion].phrase}\n        />\n\n        {dataPartieDuDiscours[currentQuestion].reponses.map((reponse,index) => (\n            <Answers\n            reponse={reponse.texte}\n            key={index}\n            children={reponse.texte}\n            ></Answers>\n        ))}         \n         <Button \n                type=\"button\" \n                className=\"btn btn-dark\"\n                onClick={increment}\n                >Next Question</Button>\n\n            <Button \n                type=\"button\" \n                className=\"btn btn-dark\"\n                onClick={decrement}\n                >Pr√©cedent Question</Button> \n\n        </div>\n  );\n}\n\nexport default DisplayQuiz;"],"mappings":";AAAA,OAAO,kCAAkC;AACzC,OAAOA,oBAAoB,MAAM,6BAA6B;AAC9D,OAAOC,kBAAkB,MAAM,wBAAwB;AACvD,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,OAAO,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,WAAWA,CAAA,EAAG;EAErB,MAAM;IAACC,eAAe;IAACC,SAAS;IAACC;EAAS,CAAC,GAAGP,cAAc,CAAC;IAE3DQ,YAAY,EAAG,CAAC;IAChBC,QAAQ,EAACb,oBAAoB,CAACc,MAAM;IACpCC,QAAQ,EAAE;EAEd,CAAC,CAAC;EAEA,oBACMR,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAE1BV,OAAA,CAACN,kBAAkB;MACfiB,QAAQ,EAAElB,oBAAoB,CAACS,eAAe,CAAC,CAACS,QAAS;MACzDC,MAAM,EAAEnB,oBAAoB,CAACS,eAAe,CAAC,CAACU;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,EAEDvB,oBAAoB,CAACS,eAAe,CAAC,CAACe,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAACC,KAAK,kBAC9DpB,OAAA,CAACF,OAAO;MACRqB,OAAO,EAAEA,OAAO,CAACE,KAAM;MAEvBX,QAAQ,EAAES,OAAO,CAACE;IAAM,GADnBD,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CACb,CAAC,eACDhB,OAAA,CAACJ,MAAM;MACA0B,IAAI,EAAC,QAAQ;MACbb,SAAS,EAAC,cAAc;MACxBc,OAAO,EAAEpB,SAAU;MAAAO,QAAA,EAClB;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE3BhB,OAAA,CAACJ,MAAM;MACH0B,IAAI,EAAC,QAAQ;MACbb,SAAS,EAAC,cAAc;MACxBc,OAAO,EAAEnB,SAAU;MAAAM,QAAA,EAClB;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/B,CAAC;AAEd;AAACQ,EAAA,GAvCQvB,WAAW;AAyCpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}