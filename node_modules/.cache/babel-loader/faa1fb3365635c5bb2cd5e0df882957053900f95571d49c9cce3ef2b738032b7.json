{"ast":null,"code":"var _jsxFileName = \"/home/clement/Desktop/Quiz_React/quiz-app/src/components/QuestionAndPhrase.js\";\nimport { Fragment } from \"react\";\n// import Answers from \"./Answers.js\";\nimport Button from \"./Button.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataQuestionPhrase = ({\n  question,\n  phrase\n}) => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: phrase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = DataQuestionPhrase;\nexport default DataQuestionPhrase;\nvar _c;\n$RefreshReg$(_c, \"DataQuestionPhrase\");","map":{"version":3,"names":["Fragment","Button","jsxDEV","_jsxDEV","DataQuestionPhrase","question","phrase","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/clement/Desktop/Quiz_React/quiz-app/src/components/QuestionAndPhrase.js"],"sourcesContent":["import { Fragment } from \"react\"\n// import Answers from \"./Answers.js\";\nimport Button from \"./Button.js\";\nconst DataQuestionPhrase = ({question, phrase}) => {\n\n    return (\n        <Fragment>\n            <div className=\"card\">\n                <h5 className=\"card-title\">{question}</h5>\n                <p className=\"card-text\">{phrase}</p>\n            </div>      \n        </Fragment>\n    )\n}\n\nexport default DataQuestionPhrase;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC;AACA,OAAOC,MAAM,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,kBAAkB,GAAGA,CAAC;EAACC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAE/C,oBACIH,OAAA,CAACH,QAAQ;IAAAO,QAAA,eACLJ,OAAA;MAAKK,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBJ,OAAA;QAAIK,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAEF;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1CT,OAAA;QAAGK,SAAS,EAAC,WAAW;QAAAD,QAAA,EAAED;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEnB,CAAC;AAAAC,EAAA,GAVKT,kBAAkB;AAYxB,eAAeA,kBAAkB;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}