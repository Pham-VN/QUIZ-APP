{"ast":null,"code":"var _jsxFileName = \"/home/clement/Desktop/Quiz_React/quiz-app/src/components/displayQuestionPhraseAndAnswers.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useState } from 'react';\nimport dataPartieDuDiscours from '../dataPartiesDeDiscours.js';\nimport DataQuestionPhrase from './QuestionAndPhrase.js';\nimport InputRadio from './InputRadio.js';\nimport Button from './Button.js';\n// import useInscrement from '../hooks/useInCrement.js'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChangeQuestion({\n  initialValue = 0,\n  maxValue = Infinity,\n  minValue = -Infinity,\n  children\n}) {\n  _s();\n  const [state, setState] = useState(initialValue);\n\n  // const nextQuestion = () => {\n  //     setState(state + 1)\n  // }\n\n  // return [\n  //     state, nextQuestion\n  // ]\n\n  return {\n    currentQuestion: state,\n    increment: () => setState(v => v < maxValue ? v + 1 : childrenalert(\"Vous avez fini le teste!\")),\n    decrement: () => setState(v => v > minValue ? v - 1 : v)\n  };\n}\n_s(ChangeQuestion, \"AEq12RjoQuqaeOViObLKJC9cUMY=\");\n_c = ChangeQuestion;\nfunction DisplayQuiz() {\n  const {\n    currentQuestion,\n    increment,\n    decrement\n  } = ChangeQuestion({\n    initialValue: 0,\n    maxValue: 15,\n    minValue: 0\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(DataQuestionPhrase, {\n      question: dataPartieDuDiscours[currentQuestion].question,\n      phrase: dataPartieDuDiscours[currentQuestion].phrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), dataPartieDuDiscours[currentQuestion].reponses.map((reponse, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: reponse.texte,\n        children: [/*#__PURE__*/_jsxDEV(InputRadio, {\n          type: \"radio\",\n          id: index,\n          name: \"partieDuDiscours\",\n          value: reponse.texte\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), reponse.texte]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      onClick: increment,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      onClick: decrement,\n      children: \"Pr\\xE9cedent Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_c2 = DisplayQuiz;\nexport default DisplayQuiz;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChangeQuestion\");\n$RefreshReg$(_c2, \"DisplayQuiz\");","map":{"version":3,"names":["useState","dataPartieDuDiscours","DataQuestionPhrase","InputRadio","Button","jsxDEV","_jsxDEV","ChangeQuestion","initialValue","maxValue","Infinity","minValue","children","_s","state","setState","currentQuestion","increment","v","childrenalert","decrement","_c","DisplayQuiz","className","question","phrase","fileName","_jsxFileName","lineNumber","columnNumber","reponses","map","reponse","index","htmlFor","texte","type","id","name","value","onClick","_c2","$RefreshReg$"],"sources":["/home/clement/Desktop/Quiz_React/quiz-app/src/components/displayQuestionPhraseAndAnswers.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport { useState } from 'react';\nimport dataPartieDuDiscours from '../dataPartiesDeDiscours.js';\nimport DataQuestionPhrase from './QuestionAndPhrase.js';\nimport InputRadio from './InputRadio.js';\nimport Button from './Button.js';\n// import useInscrement from '../hooks/useInCrement.js'\n\n\nfunction ChangeQuestion({initialValue = 0,maxValue = Infinity, minValue = -Infinity,children}) {\n    const [state, setState] = useState(initialValue)\n\n    // const nextQuestion = () => {\n    //     setState(state + 1)\n    // }\n\n  \n    // return [\n    //     state, nextQuestion\n    // ]\n\n    return {\n        currentQuestion: state,\n        increment: () => setState(v => v < maxValue ? v + 1 : childrenalert(\"Vous avez fini le teste!\")),\n        decrement: () => setState(v => v > minValue ? v - 1: v)\n    }\n\n}\n\n\nfunction DisplayQuiz() {\n\n  const {currentQuestion,increment,decrement} = ChangeQuestion({\n    \n    initialValue : 0,\n    maxValue:15,\n    minValue: 0\n})\n\n  return (\n        <div className='container'>\n        <DataQuestionPhrase\n            question={dataPartieDuDiscours[currentQuestion].question}\n            phrase={dataPartieDuDiscours[currentQuestion].phrase}\n        />\n        {dataPartieDuDiscours[currentQuestion].reponses.map((reponse,index) => (\n             <div className=\"card-body\">\n             <label htmlFor={reponse.texte} key={index}>\n              <InputRadio\n                 type=\"radio\"\n                 id={index}\n                 name=\"partieDuDiscours\"\n                 value={reponse.texte}\n              />\n              {reponse.texte}\n            </label>\n            </div>\n            \n        ))}\n            <Button \n                type=\"button\" \n                className=\"btn btn-dark\"\n                onClick={increment}\n                >Next Question</Button>\n\n            <Button \n                type=\"button\" \n                className=\"btn btn-dark\"\n                onClick={decrement}\n                >Pr√©cedent Question</Button>\n        </div>\n  );\n}\n\nexport default DisplayQuiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}