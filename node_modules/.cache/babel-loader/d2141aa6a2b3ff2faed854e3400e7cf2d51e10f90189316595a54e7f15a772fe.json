{"ast":null,"code":"var _jsxFileName = \"/home/clement/Desktop/Quiz_React/quiz-app/src/components/displayQuestionPhraseAndAnswers.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport dataPartieDuDiscours from '../dataPartiesDeDiscours.js';\nimport DataQuestionPhrase from './QuestionAndPhrase.js';\nimport InputRadio from './InputRadio.js';\nimport Button from './Button.js';\nimport useInscrement from '../hooks/useInCrement.js';\nimport { useState } from 'react';\n\n// const [currentQuestion, setCurrentQuestion] = useState(0)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayQuiz() {\n  //   const [currentQuestion, setCurrentQuestion] = useInscrement()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(DataQuestionPhrase, {\n      question: dataPartieDuDiscours[currentQuestion].question,\n      phrase: dataPartieDuDiscours[currentQuestion].phrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), dataPartieDuDiscours[currentQuestion].reponses.map((reponse, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: reponse.texte,\n        children: [/*#__PURE__*/_jsxDEV(InputRadio, {\n          type: \"radio\",\n          id: index,\n          name: \"partieDuDiscours\",\n          value: reponse.texte\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), reponse.texte]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      onClick: setCurrentQuestion,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = DisplayQuiz;\nexport default DisplayQuiz;\nvar _c;\n$RefreshReg$(_c, \"DisplayQuiz\");","map":{"version":3,"names":["dataPartieDuDiscours","DataQuestionPhrase","InputRadio","Button","useInscrement","useState","jsxDEV","_jsxDEV","DisplayQuiz","className","children","question","currentQuestion","phrase","fileName","_jsxFileName","lineNumber","columnNumber","reponses","map","reponse","index","htmlFor","texte","type","id","name","value","onClick","setCurrentQuestion","_c","$RefreshReg$"],"sources":["/home/clement/Desktop/Quiz_React/quiz-app/src/components/displayQuestionPhraseAndAnswers.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport dataPartieDuDiscours from '../dataPartiesDeDiscours.js';\nimport DataQuestionPhrase from './QuestionAndPhrase.js';\nimport InputRadio from './InputRadio.js';\nimport Button from './Button.js';\nimport useInscrement from '../hooks/useInCrement.js'\nimport { useState } from 'react';\n\n// const [currentQuestion, setCurrentQuestion] = useState(0)\n\n\n\nfunction DisplayQuiz() {\n\n//   const [currentQuestion, setCurrentQuestion] = useInscrement()\n\n  \n\n  return (\n        <div className='container'>\n        <DataQuestionPhrase\n            question={dataPartieDuDiscours[currentQuestion].question}\n            phrase={dataPartieDuDiscours[currentQuestion].phrase}\n        />\n        {dataPartieDuDiscours[currentQuestion].reponses.map((reponse,index) => (\n             <div className=\"card-body\">\n             <label htmlFor={reponse.texte} key={index}>\n              <InputRadio\n                 type=\"radio\"\n                 id={index}\n                 name=\"partieDuDiscours\"\n                 value={reponse.texte}\n              />\n              {reponse.texte}\n            </label>\n            </div>\n            \n        ))}\n            <Button \n                type=\"button\" \n                className=\"btn btn-dark\"\n                onClick={setCurrentQuestion}\n                >Next Question</Button>\n        </div>\n  );\n}\n\nexport default DisplayQuiz;"],"mappings":";AAAA,OAAO,kCAAkC;AACzC,OAAOA,oBAAoB,MAAM,6BAA6B;AAC9D,OAAOC,kBAAkB,MAAM,wBAAwB;AACvD,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,aAAa,MAAM,0BAA0B;AACpD,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,WAAWA,CAAA,EAAG;EAEvB;;EAIE,oBACMD,OAAA;IAAKE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC1BH,OAAA,CAACN,kBAAkB;MACfU,QAAQ,EAAEX,oBAAoB,CAACY,eAAe,CAAC,CAACD,QAAS;MACzDE,MAAM,EAAEb,oBAAoB,CAACY,eAAe,CAAC,CAACC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,EACDjB,oBAAoB,CAACY,eAAe,CAAC,CAACM,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAACC,KAAK,kBAC7Dd,OAAA;MAAKE,SAAS,EAAC,WAAW;MAAAC,QAAA,eAC1BH,OAAA;QAAOe,OAAO,EAAEF,OAAO,CAACG,KAAM;QAAAb,QAAA,gBAC7BH,OAAA,CAACL,UAAU;UACRsB,IAAI,EAAC,OAAO;UACZC,EAAE,EAAEJ,KAAM;UACVK,IAAI,EAAC,kBAAkB;UACvBC,KAAK,EAAEP,OAAO,CAACG;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,EACDG,OAAO,CAACG,KAAK;MAAA,GAPqBF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAER,CAAC,eACEV,OAAA,CAACJ,MAAM;MACHqB,IAAI,EAAC,QAAQ;MACbf,SAAS,EAAC,cAAc;MACxBmB,OAAO,EAAEC,kBAAmB;MAAAnB,QAAA,EAC3B;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEd;AAACa,EAAA,GAjCQtB,WAAW;AAmCpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}